#!/bin/sh

### BEGIN INIT INFO
# Provides:          tapdance
# Required-Start:    $local_fs $network $syslog $zbalance
# Required-Stop:     $local_fs $network $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: TapDance
# Description:       Runs the multi-core zero-copy TapDance daemon
### END INIT INFO

. /etc/tapdance/config

NAME="tapdance"
PATH="/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin"
APPDIR="/home/tapdance-prod/tapdance/pfring-framework/userland/examples/"
APPBIN="zc_tapdance"
APPARGS="-c 99 -o $TAPDANCE_OFFSET -n $TAPDANCE_CORES -l $TAPDANCE_LOG_INTERVAL -K $TAPDANCE_PRIVKEY -s $TAPDANCE_SKIP_CORE"
USER="root"
GROUP="root"

# Include functions 
set -e
. /lib/lsb/init-functions

ulimit -n 65535

start() {
  printf "Starting '$NAME'... "
  ulimit -n 65535
  if [ `ulimit -n` -ne 65535 ]; then
    echo "WARNING: our attempt to ulimit the fd limit up to 65535 failed!"
  fi
  #start-stop-daemon --start --chuid "$USER:$GROUP" --background --make-pidfile --pidfile /var/run/$NAME.pid --chdir "$APPDIR" --exec "$APPBIN" -- $APPARGS || true
  start-stop-daemon --start --quiet --chuid "$USER:$GROUP"    \
        --make-pidfile --pidfile /var/run/$NAME.pid --background       \
        --chdir "$APPDIR" \
        --startas /bin/bash -- -c "exec /usr/bin/env RUST_BACKTRACE=1 $APPDIR/$APPBIN $APPARGS 2>&1 | /usr/bin/multilog n10000 s104857600 /var/log/tapdance/"
  printf "done\n"
}

#We need this function to ensure the whole process tree will be killed
killtree() {
    local _pid=$1
    local _sig=${2-TERM}
    for _child in $(ps -o pid --no-headers --ppid ${_pid}); do
        killtree ${_child} ${_sig}
    done
    kill -${_sig} ${_pid}
}

stop() {
  printf "Stopping '$NAME'... "
  [ -z `cat /var/run/$NAME.pid 2>/dev/null` ] || \
  while test -d /proc/$(cat /var/run/$NAME.pid); do
    killtree $(cat /var/run/$NAME.pid) 15
    sleep 0.5
  done 
  [ -z `cat /var/run/$NAME.pid 2>/dev/null` ] || rm /var/run/$NAME.pid
  printf "done\n"
}

status() {
  status_of_proc -p /var/run/$NAME.pid "" $NAME && exit 0 || exit $?
}

reload() {
  killall -SIGUSR1 zc_tapdance
}

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart)
    stop
    start
    ;;
  reload)
    reload
    ;;
  status)
    status
    ;;
  *)
    echo "Usage: $NAME {start|stop|restart|status}" >&2
    exit 1
    ;;
esac

exit 0
